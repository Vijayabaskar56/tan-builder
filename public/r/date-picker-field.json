{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker-field",
  "type": "registry:block",
  "title": "Date Picker Field",
  "description": "A date picker field form.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod",
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "field",
    "button",
    "calendar",
    "popover"
  ],
  "files": [
    {
      "path": "registry/default/date-picker-field.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { cn } from \"@/lib/utils\";\nimport { revalidateLogic } from \"@tanstack/react-form\";\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from \"lucide-react\";\nimport * as z from \"zod\";\n\nconst datePickerFormSchema = z.object({\n\tdate: z.string(),\n});\nexport function DatePickerForm() {\n\tconst datePickerForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tdate: \"\",\n\t\t} as z.input<typeof datePickerFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: datePickerFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\t    listeners : {\n            onChange : ({fieldApi}) => {\n                console.log(fieldApi.state.value)\n            }\n        }\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<datePickerForm.AppForm>\n\t\t\t\t<datePickerForm.Form>\n\t\t\t\t\t<datePickerForm.AppField name={\"date\"}>\n\t\t\t\t\t\t{(field) => {\n\t\t\t\t\t\t\tconst date = field.state.value\n\t\t\t\t\t\t\t\t? new Date(field.state.value as string)\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"flex flex-col w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"date\"}>\n\t\t\t\t\t\t\t\t\t\t\tPick a date *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<Popover>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverTrigger\n\t\t\t\t\t\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={\"outline\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"w-full justify-start text-start font-normal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t!date && \"text-muted-foreground\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CalendarIcon className=\"mr-2 size-4\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t{date ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat(date, \"PPP\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Pick a date</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverContent className=\"w-auto p-0\" align=\"start\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode=\"single\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={(newDate) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfield.handleChange(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewDate ? newDate.toISOString() : \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t\t\t<field.FieldDescription>\n\t\t\t\t\t\t\t\t\t\t\tA date picker component.\n\t\t\t\t\t\t\t\t\t\t</field.FieldDescription>\n\t\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</datePickerForm.AppField>\n\t\t\t\t</datePickerForm.Form>\n\t\t\t</datePickerForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}