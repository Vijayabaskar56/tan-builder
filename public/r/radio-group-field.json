{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radio-group-field",
  "type": "registry:block",
  "title": "Radio Group Field",
  "description": "A radio group field form.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod"
  ],
  "registryDependencies": [
    "field",
    "label",
    "radio-group"
  ],
  "files": [
    {
      "path": "registry/default/radio-group-field.tsx",
      "content": "import { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { revalidateLogic } from \"@tanstack/react-form\";\nimport * as z from \"zod\";\n\nconst radioGroupFormSchema = z.object({\n\tradio: z.string(),\n});\nexport function RadioGroupForm() {\n\tconst radioGroupForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tradio: \"\",\n\t\t} as z.input<typeof radioGroupFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: radioGroupFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\t    listeners : {\n            onChange : ({fieldApi}) => {\n                console.log(fieldApi.state.value)\n            }\n        }\n\t});\n\tconst options = [\n\t\t{ label: \"Option 1\", value: \"1\" },\n\t\t{ label: \"Option 2\", value: \"2\" },\n\t];\n\treturn (\n\t\t<div>\n\t\t\t<radioGroupForm.AppForm>\n\t\t\t\t<radioGroupForm.Form>\n\t\t\t\t\t<radioGroupForm.AppField name={\"radio\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"flex flex-col gap-2 w-full py-1\">\n\t\t\t\t\t\t\t\t<field.FieldLabel className=\"mt-0\" htmlFor={\"radio\"}>\n\t\t\t\t\t\t\t\t\tChoose option *\n\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t<field.FieldDescription>\n\t\t\t\t\t\t\t\t\tA group of radio buttons.\n\t\t\t\t\t\t\t\t</field.FieldDescription>\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\tonValueChange={field.handleChange}\n\t\t\t\t\t\t\t\t\t\tname={\"radio\"}\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{options.map(({ label, value }) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={value} className=\"flex items-center gap-x-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<Label htmlFor={value}>{label}</Label>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</radioGroupForm.AppField>\n\t\t\t\t</radioGroupForm.Form>\n\t\t\t</radioGroupForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}