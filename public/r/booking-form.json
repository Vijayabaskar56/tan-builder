{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "booking-form",
  "type": "registry:block",
  "title": "Booking Form",
  "description": "A booking form for placing orders with product selection, personal details, and payment.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod"
  ],
  "registryDependencies": [
    "checkbox",
    "field",
    "input",
    "label",
    "radio-group",
    "select",
    "textarea",
    "https://tancn.dev/r/tanstack-form.json"
  ],
  "files": [
    {
      "path": "registry/default/booking-form.tsx",
      "content": "import { revalidateLogic } from \"@tanstack/react-form\";\nimport { toast } from \"sonner\";\nimport * as z from \"zod\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { FieldDescription, FieldLegend } from \"@/components/ui/field\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n\tSelect,\n\tSelectContent,\n\tSelectItem,\n\tSelectTrigger,\n\tSelectValue,\n} from \"@/components/ui/select\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\nexport const bookingFormSchema = z.object({\n\tproduct: z.string().min(1, \"This field is required\"),\n\tfirstName: z.string().min(1, \"This field is required\"),\n\tlastName: z.string().min(1, \"This field is required\"),\n\temail: z.email(),\n\tbillingAddress: z.string().min(1, \"This field is required\"),\n\tpaymentMethod: z.string().min(1, \"This field is required\"),\n\tterms: z.boolean(),\n});\n\nexport function BookingForm() {\n\tconst bookingForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tproduct: \"basic\",\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\temail: \"\",\n\t\t\tbillingAddress: \"\",\n\t\t\tpaymentMethod: \"credit\",\n\t\t\tterms: false,\n\t\t} as z.input<typeof bookingFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: bookingFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\tonSubmit: ({ value }) => {\n\t\t\ttoast.success(\"success\");\n\t\t},\n\t\tonSubmitInvalid({ formApi }) {\n\t\t\tconst errorMap = formApi.state.errorMap[\"onDynamic\"]!;\n\t\t\tconst inputs = Array.from(\n\t\t\t\tdocument.querySelectorAll(\"#previewForm input\"),\n\t\t\t) as HTMLInputElement[];\n\t\t\tlet firstInput: HTMLInputElement | undefined;\n\t\t\tfor (const input of inputs) {\n\t\t\t\tif (errorMap[input.name]) {\n\t\t\t\t\tfirstInput = input;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfirstInput?.focus();\n\t\t},\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<bookingForm.AppForm>\n\t\t\t\t<bookingForm.Form>\n\t\t\t\t\t<bookingForm.FieldLegend className=\"text-3xl font-bold\">\n\t\t\t\t\t\tPlace Your Order\n\t\t\t\t\t</bookingForm.FieldLegend>\n\t\t\t\t\t<bookingForm.FieldDescription>\n\t\t\t\t\t\tFill out the details below to complete your order\n\t\t\t\t\t</bookingForm.FieldDescription>\n\t\t\t\t\t<bookingForm.FieldSeparator />\n\t\t\t\t\t<bookingForm.AppField name={\"product\"}>\n\t\t\t\t\t\t{(field) => {\n\t\t\t\t\t\t\tconst options = [\n\t\t\t\t\t\t\t\t{ label: \"Basic Plan - $29/month\", value: \"basic\" },\n\t\t\t\t\t\t\t\t{ label: \"Pro Plan - $59/month\", value: \"pro\" },\n\t\t\t\t\t\t\t\t{ label: \"Enterprise Plan - $99/month\", value: \"enterprise\" },\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex justify-between items-center\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={\"product\"}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSelect Product *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tname={\"product\"}\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonValueChange={field.handleChange}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={String(field?.state.value ?? \"\")}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t\t<SelectTrigger className=\"w-full\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectValue placeholder=\"Select Product\" />\n\t\t\t\t\t\t\t\t\t\t\t</SelectTrigger>\n\t\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectContent>\n\t\t\t\t\t\t\t\t\t\t\t{options.map(({ label, value }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectItem key={value} value={value}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</SelectContent>\n\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t<div className=\"flex items-center justify-between flex-wrap sm:flex-nowrap w-full gap-2\">\n\t\t\t\t\t\t<bookingForm.AppField name={\"firstName\"}>\n\t\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"firstName\"}>\n\t\t\t\t\t\t\t\t\t\t\tFirst Name *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tname={\"firstName\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your first name\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t\t<bookingForm.AppField name={\"lastName\"}>\n\t\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"lastName\"}>\n\t\t\t\t\t\t\t\t\t\t\tLast Name *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tname={\"lastName\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your last name\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t</div>\n\t\t\t\t\t<bookingForm.AppField name={\"email\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"email\"}>\n\t\t\t\t\t\t\t\t\t\tEmail Address *\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tname={\"email\"}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t<bookingForm.AppField name={\"billingAddress\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"billingAddress\"}>\n\t\t\t\t\t\t\t\t\t\tBilling Address *\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your complete billing address\"\n\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tname={\"billingAddress\"}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tclassName=\"resize-none\"\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t<bookingForm.AppField name={\"paymentMethod\"}>\n\t\t\t\t\t\t{(field) => {\n\t\t\t\t\t\t\tconst options = [\n\t\t\t\t\t\t\t\t{ label: \"Credit Card\", value: \"credit\" },\n\t\t\t\t\t\t\t\t{ label: \"PayPal\", value: \"paypal\" },\n\t\t\t\t\t\t\t\t{ label: \"Bank Transfer\", value: \"bank\" },\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"flex flex-col gap-2 w-full py-1\">\n\t\t\t\t\t\t\t\t\t<field.FieldLabel className=\"mt-0\" htmlFor={\"paymentMethod\"}>\n\t\t\t\t\t\t\t\t\t\tPayment Method *\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\t\tonValueChange={field.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tname={\"paymentMethod\"}\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{options.map(({ label, value }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={value} className=\"flex items-center gap-x-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label htmlFor={value}>{label}</Label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t<bookingForm.AppField name={\"terms\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet>\n\t\t\t\t\t\t\t\t<field.Field orientation=\"horizontal\">\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tchecked={Boolean(field.state.value)}\n\t\t\t\t\t\t\t\t\t\tonCheckedChange={(checked) =>\n\t\t\t\t\t\t\t\t\t\t\tfield.handleChange(checked as boolean)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<field.FieldContent>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"space-y-1 leading-none\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={\"terms\"}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tI agree to the terms and conditions *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\n\t\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t\t</field.FieldContent>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</bookingForm.AppField>\n\t\t\t\t\t<div className=\"flex justify-end items-center w-full pt-3\">\n\t\t\t\t\t\t<bookingForm.SubmitButton label=\"Submit\" />\n\t\t\t\t\t</div>\n\t\t\t\t</bookingForm.Form>\n\t\t\t</bookingForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}