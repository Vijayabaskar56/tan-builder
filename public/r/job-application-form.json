{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "job-application-form",
  "type": "registry:block",
  "title": "Job Application Form",
  "description": "A form for job applications.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod"
  ],
  "registryDependencies": [
    "field",
    "input",
    "label",
    "radio-group",
    "select",
    "textarea",
    "https://tan-form-builder.baskar.dev/r/tanstack-form.json"
  ],
  "files": [
    {
      "path": "registry/default/jobapplication-form.tsx",
      "content": "import { revalidateLogic } from \"@tanstack/react-form\";\nimport { toast } from \"sonner\";\nimport * as z from \"zod\";\n\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n\tSelect,\n\tSelectContent,\n\tSelectItem,\n\tSelectTrigger,\n\tSelectValue,\n} from \"@/components/ui/select\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\nexport const jobApplicationFormSchema = z.object({\n\tfirstName: z.string().min(1, \"This field is required\"),\n\tlastName: z.string().min(1, \"This field is required\"),\n\temail: z.email(),\n\tgithubUrl: z.string().min(1, \"This field is required\").optional(),\n\tlinkedinUrl: z.string().min(1, \"This field is required\").optional(),\n\tposition: z.string().min(1, \"This field is required\"),\n\texperience: z.string().min(1, \"This field is required\"),\n\tcoverLetter: z.string().min(1, \"This field is required\").optional(),\n});\n\nexport function JobApplicationForm() {\n\tconst jobApplicationForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\temail: \"\",\n\t\t\tgithubUrl: \"\",\n\t\t\tlinkedinUrl: \"\",\n\t\t\tposition: \"frontend\",\n\t\t\texperience: \"0-1\",\n\t\t\tcoverLetter: \"\",\n\t\t} as z.input<typeof jobApplicationFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: jobApplicationFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\tonSubmit: ({}) => {\n\t\t\ttoast.success(\"success\");\n\t\t},\n\t\tonSubmitInvalid({ formApi }) {\n\t\t\tconst errorMap = formApi.state.errorMap[\"onDynamic\"]!;\n\t\t\tconst inputs = Array.from(\n\t\t\t\tdocument.querySelectorAll(\"#previewForm input\"),\n\t\t\t) as HTMLInputElement[];\n\t\t\tlet firstInput: HTMLInputElement | undefined;\n\t\t\tfor (const input of inputs) {\n\t\t\t\tif (errorMap[input.name]) {\n\t\t\t\t\tfirstInput = input;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfirstInput?.focus();\n\t\t},\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<jobApplicationForm.AppForm>\n\t\t\t\t<jobApplicationForm.Form>\n\t\t\t\t\t<jobApplicationForm.FieldLegend className=\"text-3xl font-bold\">\n\t\t\t\t\t\tJob Application\n\t\t\t\t\t</jobApplicationForm.FieldLegend>\n\t\t\t\t\t<jobApplicationForm.FieldDescription>\n\t\t\t\t\t\tPlease fill out the form below to apply for this position\n\t\t\t\t\t</jobApplicationForm.FieldDescription>\n\t\t\t\t\t<jobApplicationForm.FieldSeparator />\n\t\t\t\t\t<div className=\"flex items-center justify-between flex-wrap sm:flex-nowrap w-full gap-2\">\n\t\t\t\t\t\t<jobApplicationForm.AppField name={\"firstName\"}>\n\t\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"firstName\"}>\n\t\t\t\t\t\t\t\t\t\t\tFirst Name *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tname={\"firstName\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your first name\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t\t<jobApplicationForm.AppField name={\"lastName\"}>\n\t\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"lastName\"}>\n\t\t\t\t\t\t\t\t\t\t\tLast Name *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tname={\"lastName\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your last name\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t</div>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"email\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"email\"}>\n\t\t\t\t\t\t\t\t\t\tEmail Address *\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tname={\"email\"}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email address\"\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"githubUrl\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"githubUrl\"}>\n\t\t\t\t\t\t\t\t\t\tGitHub URL{\" \"}\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tname={\"githubUrl\"}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your GitHub URL\"\n\t\t\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"linkedinUrl\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"linkedinUrl\"}>\n\t\t\t\t\t\t\t\t\t\tLinkedIn URL{\" \"}\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tname={\"linkedinUrl\"}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your LinkedIn URL\"\n\t\t\t\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"position\"}>\n\t\t\t\t\t\t{(field) => {\n\t\t\t\t\t\t\tconst options = [\n\t\t\t\t\t\t\t\t{ label: \"Frontend Developer\", value: \"frontend\" },\n\t\t\t\t\t\t\t\t{ label: \"Backend Developer\", value: \"backend\" },\n\t\t\t\t\t\t\t\t{ label: \"Full Stack Developer\", value: \"fullstack\" },\n\t\t\t\t\t\t\t\t{ label: \"UI/UX Designer\", value: \"designer\" },\n\t\t\t\t\t\t\t\t{ label: \"Product Manager\", value: \"pm\" },\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"flex flex-col gap-2 w-full py-1\">\n\t\t\t\t\t\t\t\t\t<field.FieldLabel className=\"mt-0\" htmlFor={\"position\"}>\n\t\t\t\t\t\t\t\t\t\tWhich position are you applying for? *\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\t\tonValueChange={field.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tname={\"position\"}\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{options.map(({ label, value }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={value} className=\"flex items-center gap-x-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RadioGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={value}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Label htmlFor={value}>{label}</Label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"experience\"}>\n\t\t\t\t\t\t{(field) => {\n\t\t\t\t\t\t\tconst options = [\n\t\t\t\t\t\t\t\t{ label: \"0-1 years\", value: \"0-1\" },\n\t\t\t\t\t\t\t\t{ label: \"2-3 years\", value: \"2-3\" },\n\t\t\t\t\t\t\t\t{ label: \"4-5 years\", value: \"4-5\" },\n\t\t\t\t\t\t\t\t{ label: \"6-10 years\", value: \"6-10\" },\n\t\t\t\t\t\t\t\t{ label: \"10+ years\", value: \"10+\" },\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex justify-between items-center\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor={\"experience\"}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tYears of Experience *\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tname={\"experience\"}\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tonValueChange={field.handleChange}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={String(field?.state.value ?? \"\")}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t\t\t<SelectTrigger className=\"w-full\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectValue placeholder=\"Select Experience\" />\n\t\t\t\t\t\t\t\t\t\t\t</SelectTrigger>\n\t\t\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t\t\t<SelectContent>\n\t\t\t\t\t\t\t\t\t\t\t{options.map(({ label, value }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectItem key={value} value={value}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t\t\t\t</SelectItem>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</SelectContent>\n\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<jobApplicationForm.AppField name={\"coverLetter\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.Field>\n\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"coverLetter\"}>\n\t\t\t\t\t\t\t\t\t\tCover Letter{\" \"}\n\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t<Textarea\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Tell us why you're interested in this position...\"\n\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\tname={\"coverLetter\"}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\tclassName=\"resize-none\"\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</jobApplicationForm.AppField>\n\t\t\t\t\t<div className=\"flex justify-end items-center w-full pt-3\">\n\t\t\t\t\t\t<jobApplicationForm.SubmitButton label=\"Submit\" />\n\t\t\t\t\t</div>\n\t\t\t\t</jobApplicationForm.Form>\n\t\t\t</jobApplicationForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}