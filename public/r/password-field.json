{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-field",
  "type": "registry:block",
  "title": "Password Field",
  "description": "A password field form with visibility toggle.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod",
    "lucide-react"
  ],
  "registryDependencies": [
    "field",
    "input-group"
  ],
  "files": [
    {
      "path": "registry/default/password-field.tsx",
      "content": "import { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { revalidateLogic } from \"@tanstack/react-form\";\nimport { EyeIcon, EyeOffIcon } from \"lucide-react\";\nimport * as z from \"zod\";\n\nconst passwordFormSchema = z.object({\n\tpassword: z.string(),\n});\nexport function PasswordForm() {\n\tconst passwordForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tpassword: \"\",\n\t\t} as z.input<typeof passwordFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: passwordFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\t    listeners : {\n            onChange : ({fieldApi}) => {\n                console.log(fieldApi.state.value)\n            }\n        }\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<passwordForm.AppForm>\n\t\t\t\t<passwordForm.Form>\n\t\t\t\t\t<passwordForm.AppField name={\"password\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"w-full\">\n\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"password\"}>\n\t\t\t\t\t\t\t\t\tPassword *\n\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t<field.Field orientation=\"horizontal\">\n\t\t\t\t\t\t\t\t\t<field.InputGroup>\n\t\t\t\t\t\t\t\t\t\t<field.InputGroupInput\n\t\t\t\t\t\t\t\t\t\t\tid={\"password\"}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"password\"}\n\t\t\t\t\t\t\t\t\t\t\tname={\"password\"}\n\t\t\t\t\t\t\t\t\t\t\tvalue={(field.state.value as string | undefined) ?? \"\"}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => field.handleChange(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={field.handleBlur}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<field.InputGroupAddon align=\"inline-end\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer flex items-center justify-center p-1 hover:bg-gray-100 rounded transition-colors\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst input =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.currentTarget.parentElement?.parentElement?.querySelector(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"input\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.type =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.type === \"password\" ? \"text\" : \"password\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Toggle the button's data attribute for icon switching\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst button = e.currentTarget;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbutton.setAttribute(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"data-show\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.type === \"text\" ? \"true\" : \"false\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-show=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<EyeIcon className=\"size-3 data-[show=true]:hidden\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<EyeOffIcon className=\"size-3 hidden data-[show=true]:block\" />\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</field.InputGroupAddon>\n\t\t\t\t\t\t\t\t\t</field.InputGroup>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t\t<field.FieldDescription>\n\t\t\t\t\t\t\t\t\tA password input with visibility toggle.\n\t\t\t\t\t\t\t\t</field.FieldDescription>\n\t\t\t\t\t\t\t\t<field.FieldError />\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</passwordForm.AppField>\n\t\t\t\t</passwordForm.Form>\n\t\t\t</passwordForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}