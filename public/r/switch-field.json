{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "switch-field",
  "type": "registry:block",
  "title": "Switch Field",
  "description": "A switch field form.",
  "dependencies": [
    "@tanstack/react-form",
    "sonner",
    "zod"
  ],
  "registryDependencies": [
    "field",
    "switch"
  ],
  "files": [
    {
      "path": "registry/default/switch-field.tsx",
      "content": "import { Switch } from \"@/components/ui/switch\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { revalidateLogic } from \"@tanstack/react-form\";\nimport * as z from \"zod\";\n\nconst switchFormSchema = z.object({\n\tswitch: z.boolean(),\n});\nexport function SwitchForm() {\n\tconst switchForm = useAppForm({\n\t\tdefaultValues: {\n\t\t\tswitch: false,\n\t\t} as z.input<typeof switchFormSchema>,\n\t\tvalidationLogic: revalidateLogic(),\n\t\tvalidators: {\n\t\t\tonDynamic: switchFormSchema,\n\t\t\tonDynamicAsyncDebounceMs: 300,\n\t\t},\n\t\t    listeners : {\n            onChange : ({fieldApi}) => {\n                console.log(fieldApi.state.value)\n            }\n        }\n\t});\n\treturn (\n\t\t<div>\n\t\t\t<switchForm.AppForm>\n\t\t\t\t<switchForm.Form>\n\t\t\t\t\t<switchForm.AppField name={\"switch\"}>\n\t\t\t\t\t\t{(field) => (\n\t\t\t\t\t\t\t<field.FieldSet className=\"flex flex-col p-3 justify-center w-full border rounded\">\n\t\t\t\t\t\t\t\t<field.Field orientation=\"horizontal\">\n\t\t\t\t\t\t\t\t\t<field.FieldContent>\n\t\t\t\t\t\t\t\t\t\t<field.FieldLabel htmlFor={\"switch\"}>\n\t\t\t\t\t\t\t\t\t\t\tEnable notifications\n\t\t\t\t\t\t\t\t\t\t</field.FieldLabel>\n\t\t\t\t\t\t\t\t\t\t<field.FieldDescription>\n\t\t\t\t\t\t\t\t\t\t\tA toggle switch.\n\t\t\t\t\t\t\t\t\t\t</field.FieldDescription>\n\t\t\t\t\t\t\t\t\t</field.FieldContent>\n\t\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\t\tname={\"switch\"}\n\t\t\t\t\t\t\t\t\t\tchecked={Boolean(field.state.value)}\n\t\t\t\t\t\t\t\t\t\tonCheckedChange={(checked) => {\n\t\t\t\t\t\t\t\t\t\t\tfield.handleChange(checked);\n\t\t\t\t\t\t\t\t\t\t\t// Trigger validation by simulating blur\n\t\t\t\t\t\t\t\t\t\t\tfield.handleBlur();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\t\t\t\taria-invalid={!!field.state.meta.errors.length}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</field.Field>\n\t\t\t\t\t\t\t</field.FieldSet>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</switchForm.AppField>\n\t\t\t\t</switchForm.Form>\n\t\t\t</switchForm.AppForm>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}